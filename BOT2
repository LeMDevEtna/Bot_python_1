import websocket ,json, pprint, talib, numpy
from binance.client import Client
from binance.enums import *
import config

SOCKET =  "wss://stream.binance.com:9443/ws/ftmusdt@kline_1m"
TRADE_SYMBOL = 'FTMUSDT'
TRADE_QUANTITY = 10
closes = []
in_position  = False
client = Client(config.API_KEY, config.API_SECRET, tld='us')
def order(side, quantity, symbol, order_type=ORDER_TYPE_MARKET):
    try:
        print("sending order ...")
        order = client.create_order(symbol=symbol,side = side,type = order_type,quantity = quantity)
        print(order)
    except Exception as e:
        return False
    return True    
    
def on_open():
    print("opened connection --")

def on_close():
    print("closed connection --")
 
def on_message(ws,message):
    global closes
    print("received message --")
    
    json_message = json.loads(message)
    #pprint.pprint(json_message['k']['l']) 
    pprint.pprint(json_message )    
    print("ACHETER !!! {}".format(TRADE_SYMBOL))    
    order_succeeded = order_market(SIDE_SELL, TRADE_QUANTITY, TRADE_SYMBOL)
    print(order_succeeded)

                        
ws = websocket.WebSocketApp(SOCKET,on_open=on_open,on_close=on_close,on_message=on_message)
ws.run_forever()
